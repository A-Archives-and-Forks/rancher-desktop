# This is a temporary workflow to build Windows Installer packages before it is
# completely integrated.
name: Windows Installer

on:
  push:
    branches:
      - main
  workflow_dispatch: {}
permissions:
  contents: read

jobs:
  package:
    runs-on: windows-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
        # Needed to run `git describe` to get full version info
        fetch-depth: 0
    - uses: actions/setup-node@v3
      with:
        node-version: '16.x'
    - uses: actions/setup-python@v4
      with:
        python-version: '2.x'
    - uses: actions/setup-go@v3
      with:
        go-version: '^1.18'
    - name: Install Windows dependencies
      shell: powershell
      run: .\scripts\windows-setup.ps1 -SkipVisualStudio -SkipTools
    - run: npm ci
    - run: npm run build -- --win --publish=never
      env:
        RD_FEAT_WIX: '1'
    - name: Upload Windows installer
      uses: actions/upload-artifact@v3
      with:
        name: Rancher Desktop Setup unsigned.msi
        path: dist/Rancher Desktop*.msi
        if-no-files-found: error
    - name: Upload Windows zip
      uses: actions/upload-artifact@v3
      with:
        name: Rancher Desktop-win.zip
        path: dist/Rancher Desktop-*-win.zip
        if-no-files-found: error
  sign:
    name: Test Signing
    needs: package
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
    - name: Install Windows dependencies
      shell: powershell
      run: .\scripts\windows-setup.ps1 -SkipVisualStudio -SkipTools
    - uses: actions/setup-go@v3
      with:
        go-version: '^1.18'
    - run: npm ci
    - uses: actions/download-artifact@v3
      with:
        name: Rancher Desktop-win.zip
    - shell: powershell
      env:
        RD_FEAT_WIX: '1'
      run: |
        # Generate a test signing certificate
        $cert = New-SelfSignedCertificate `
          -Type Custom `
          -Subject "CN=Rancher-Sandbox, C=CA" `
          -KeyUsage DigitalSignature `
          -CertStoreLocation Cert:\CurrentUser\My `
          -FriendlyName "Rancher-Sandbox Code Signing" `
          -TextExtension @("2.5.29.37={text}1.3.6.1.5.5.7.3.3", "2.5.29.19={text}")
        Write-Output $cert
        $env:CSC_FINGERPRINT = $cert.Thumbprint
        # Run the signing script
        npm run sign -- (Get-Item "Rancher Desktop*-win.zip")
        # Check that the file was signed by the expected cert
        $usedCert = (Get-AuthenticodeSignature -FilePath 'dist\Rancher Desktop Setup*.msi').SignerCertificate
        Write-Output $usedCert
        if ($cert -ne $usedCert) {
          Write-Output "Expected Certificate" $cert "Actual Certificate" $usedCert
          Throw "Installer signed with wrong certicate"
        }
    - name: Upload Windows installer
      uses: actions/upload-artifact@v3
      with:
        name: Rancher Desktop Setup.msi
        path: dist/Rancher Desktop*.msi
        if-no-files-found: error
